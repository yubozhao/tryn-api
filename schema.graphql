type Vehicle {
    vid: String
    did: String
    lat: Float
    lon: Float
    heading: Int
}

type PrevVehicle {
    timeSinceArrival: Float
    vehicle: Vehicle
}

type NextVehicle {
    timeToArrival: Float
    vehicle: Vehicle
}

type Stop {
    sid: String
    name: String
    lat: Float
    lon: Float
    nextVehicles: [NextVehicle]
    prevVehicles: [PrevVehicle]
}

type RouteState {
    vtime: String
    vehicles: [Vehicle]
}

type Route {
    rid: String
    stops: [Stop]
    routeStates: [RouteState]
}

type PointReliability {
   lat: Float
   lon: Float
   arrivals: [Route]
}

type Incident {
    lat: Float
    lon: Float
    route: String
    type: String
    time: Int
    gap: Int
    delay: Int
    agency: String
}

type TrynState {
    agency: String
    startTime: String
    endTime: String
    routes: [Route]
    incidents: [Incident]
    pointReliabilities: [PointReliability]
}

input Coordinate {
    lat: Float
    lon: Float
}

type Query {
    trynState(
        agency: String!
        startTime: String!
        endTime: String!
        routes: [String!]
        pointReliabilities: [Coordinate]
    ): TrynState
}

schema {
    query: Query
}
